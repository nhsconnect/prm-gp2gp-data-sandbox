index="gp2gp_nms_prod" sourcetype="gp2gpmi-rr" RequestorODS=$ods_code$
| eval registrationKey=RegistrationTime + "-" + RegistrationSmartcardUID
| eval hasGp2gpConversation=if(isnotnull(ConversationID), 1, 0)
| eval wasIntegrated = if(ExtractAckStatus == "1" and ExtractAckCode in ("0", "00"), 1, 0)
| eval wasInternalTransfer = if(RegistrationType == "3" and RequestFailureType == "0", 1, 0)
| eval wasSupressed = if(ExtractAckStatus == "5" and ExtractAckCode == "15", 1, 0)
| eval hasUnknownRegistrationFailure = if(RegistrationType != "3" and RequestFailureType == "0" and (RequestFailurePoint == "0" or RequestFailurePoint == "60"), 1, 0)
| eval wasNewPatient = if(RegistrationType == "1" and RequestFailurePoint == "60" and RequestFailureType == "5", 1, 0)
| eval wasReturningPatient = if(RegistrationType == "2" and RequestFailurePoint == "60" and RequestFailureType == "5", 1, 0)
| eval failedToGenerateExtract = if(RequestFailurePoint == "60" and RequestFailureType == "6" and RequestErrorCode == "10" , 1, 0)
| eval hasTransferFromNonGp2gpPractice = if(RequestFailurePoint == "40" and RequestFailureType == "4", 1, 0)
| eval hasPatientAlreadyAtPractice = if(RequestFailurePoint == "60" and RequestFailureType == "2", 1, 0)
| eval hasPDSLookupFailure = if(RequestFailurePoint == "10" or RequestFailurePoint == "20", 1, 0)
| eval hasError = if(isnotnull(RequestFailureTime) or isnotnull(RequestFailureType), 1, 0)
| eval hasSenderLargeMessageFailure = if(RequestFailurePoint == "60" and RequestFailureType == "6" and RequestErrorCode == "30" , 1, 0)
| eval hasRequestorLargeMessageFailure = if(RequestFailurePoint == "60" and RequestFailureType == "1" and RequestErrorCode == "100" and ExtractAckCode == "30", 1, 0)
| eval hasSDSLookupFailure = if(RequestFailurePoint == "40" and RequestFailureType == "3" and RequestErrorCode == "24" , 1, 0)
| eval month=substr(RegistrationTime, 6, 2)
| eval state = coalesce(case(
  hasGp2gpConversation == 1 and wasIntegrated == 1, "integrated",
  hasGp2gpConversation == 1 and wasSupressed == 1, "suppressed",
  hasGp2gpConversation == 1 and hasError == 0, "requested",
  hasGp2gpConversation == 1 and hasSenderLargeMessageFailure == 1, "senderLargeMessageFailure",
  hasGp2gpConversation == 1 and hasRequestorLargeMessageFailure == 1, "requestorLargeMessageFailure",
  hasGp2gpConversation == 1 and failedToGenerateExtract == 1, "failedToGenerateExtract",
  hasGp2gpConversation == 0 and wasInternalTransfer == 1, "TPPInternalTransfer",
  hasGp2gpConversation == 0 and hasPDSLookupFailure == 1, "PatientLookupFailure",
  hasGp2gpConversation == 0 and wasNewPatient == 1, "newRegistration",
  hasGp2gpConversation == 0 and wasReturningPatient == 1, "returningPatientNoPreviousGp",
  hasGp2gpConversation == 0 and hasTransferFromNonGp2gpPractice == 1, "transferFromNonGp2gp",
  hasGp2gpConversation == 0 and hasPatientAlreadyAtPractice = 1, "patientAlreadyAtPractice",
  hasGp2gpConversation == 0 and hasUnknownRegistrationFailure == 1, "unknownRegistrationFailure",
  hasGp2gpConversation == 0 and hasSDSLookupFailure == 1, "SDSLookupFailure"
  ), "unknown")
| stats
  first(month) as month,
  list(state) as states BY RequestorODS, registrationKey
| eval outcome = coalesce(case(
  isnotnull(mvfind(states, "integrated")), "integrated",
  isnotnull(mvfind(states, "suppressed")), "supressed",
  mvcount(states) = 1 AND mvindex(states, 0) = "requested", "requested",
  isnotnull(mvfind(states, "senderLargeMessageFailure")), "sender large message failure",
  isnotnull(mvfind(states, "requestorLargeMessageFailure")), "requestor large message failure",
  isnotnull(mvfind(states, "failedToGenerateExtract")), "failed to generate EHR extract",
  isnotnull(mvfind(states, "TPPInternalTransfer")), "TPP internal transfer",
  isnotnull(mvfind(states, "newRegistration")), "new registration",
  isnotnull(mvfind(states, "PatientLookupFailure")), "patient lookup failure",
  isnotnull(mvfind(states, "returningPatientNoPreviousGp")), "returning patient (no previous GP)",
  isnotnull(mvfind(states, "patientAlreadyAtPractice")), "patient already at practice",
  isnotnull(mvfind(states, "transferFromNonGp2gp")), "transfer from non GP2GP practice",
  isnotnull(mvfind(states, "unknownRegistrationFailure")), "unknown registration failure",
  isnotnull(mvfind(states, "SDSLookupFailure")), "SDS lookup failure"
  ), "unknown")
| chart count over month by outcomeâ€‹

